<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d5/d77/logging_8h" kind="file" language="C++">
    <compoundname>logging.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">list</includes>
    <includes local="no">sstream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdio.h</includes>
    <includedby refid="dd/daf/logging_8cpp" local="yes">src/logging.cpp</includedby>
    <incdepgraph>
      <node id="54">
        <label>list</label>
      </node>
      <node id="53">
        <label>string</label>
      </node>
      <node id="56">
        <label>fstream</label>
      </node>
      <node id="55">
        <label>sstream</label>
      </node>
      <node id="52">
        <label>src/logging.h</label>
        <link refid="d5/d77/logging_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>iostream</label>
      </node>
      <node id="58">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="59">
        <label>src/logging.h</label>
        <link refid="d5/d77/logging_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>src/logging.cpp</label>
        <link refid="dd/daf/logging_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d1/df0/classhandler" prot="public">handler</innerclass>
    <innerclass refid="d4/d8d/classlogging" prot="public">logging</innerclass>
    <innerclass refid="d7/d88/structroot_logger" prot="public">rootLogger</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="d5/d77/logging_8h_1a809f816dd6df4e17499413cff1926fd4" prot="public" static="no">
        <name>INFO</name>
        <param><defname>message</defname></param>
        <initializer><ref refid="d7/d88/structroot_logger_1af163fa3b8e6f1c7d4a2d1dd9fe1594ce" kindref="member">rootLogger::info</ref>(message);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logging.h" line="50" column="9" bodyfile="src/logging.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d5/d77/logging_8h_1a9b7950453a79cd338475905367cb10c0" prot="public" static="no">
        <name>SET_LOGGING_HANDLER</name>
        <param><defname>newHandler</defname></param>
        <initializer><ref refid="d7/d88/structroot_logger_1a2b12bc69ec8a404d513d7db3ea856be5" kindref="member">rootLogger::setHandler</ref>(newHandler);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logging.h" line="54" column="9" bodyfile="src/logging.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d5/d77/logging_8h_1af90a9d943a7fb800048cdfb29a177f30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string NowTime</definition>
        <argsstring>()</argsstring>
        <name>NowTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logging.h" line="14" column="1" bodyfile="src/logging.cpp" bodystart="92" bodyend="104"/>
        <referencedby refid="d4/d8d/classlogging_1aa15fabd099ea702ad39a8bb82e56d56c" compoundref="dd/daf/logging_8cpp" startline="22" endline="26">logging::info</referencedby>
        <referencedby refid="d7/d88/structroot_logger_1af163fa3b8e6f1c7d4a2d1dd9fe1594ce" compoundref="dd/daf/logging_8cpp" startline="65" endline="68">rootLogger::info</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LOGGING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOGGING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d5/d77/logging_8h_1af90a9d943a7fb800048cdfb29a177f30" kindref="member">NowTime</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="d1/df0/classhandler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d1/df0/classhandler" kindref="compound">handler</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="d1/df0/classhandler_1a0f44a69126e692e8bc8690539120be75" kindref="member">handler</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="d1/df0/classhandler_1a0f44a69126e692e8bc8690539120be75" kindref="member">handler</ref>(std::string<sp/>fn);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d1/df0/classhandler_1a290cc764503dcc061a43c7be655ed512" kindref="member">~handler</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/df0/classhandler_1a4d5c893a4bd43354effd040fd5946186" kindref="member">setStream</ref>(std::string<sp/>fn);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/df0/classhandler_1ae4a74a6e7ba909279833759b4cab2bcc" kindref="member">write</ref>(std::string<sp/>msg);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26" refid="d1/df0/classhandler_1aea02e85ad5696302680d49a66263a2aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/><ref refid="d1/df0/classhandler_1aea02e85ad5696302680d49a66263a2aa" kindref="member">ofs</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="d4/d8d/classlogging" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d8d/classlogging" kindref="compound">logging</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d8d/classlogging" kindref="compound">logging</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d8d/classlogging" kindref="compound">logging</ref>(<ref refid="d1/df0/classhandler" kindref="compound">handler</ref><sp/>*h);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="d4/d8d/classlogging" kindref="compound">logging</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setHandler(<ref refid="d1/df0/classhandler" kindref="compound">handler</ref><sp/>*newHandler);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>info(std::string<sp/>message);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38" refid="d4/d8d/classlogging_1a0bd664aa980c8b51e8ebd84c5f6a3901" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/df0/classhandler" kindref="compound">handler</ref>*<sp/><ref refid="d4/d8d/classlogging_1a0bd664aa980c8b51e8ebd84c5f6a3901" kindref="member">myHandler</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="d7/d88/structroot_logger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/d88/structroot_logger" kindref="compound">rootLogger</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setHandler(<ref refid="d1/df0/classhandler" kindref="compound">handler</ref><sp/>*newHandler);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>info(std::string<sp/>message);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="d7/d88/structroot_logger_1a91e51e01c8b12e95891d79807b93a6f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d4/d8d/classlogging" kindref="compound">logging</ref><sp/><ref refid="d7/d88/structroot_logger_1a91e51e01c8b12e95891d79807b93a6f0" kindref="member">log</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="d5/d77/logging_8h_1a809f816dd6df4e17499413cff1926fd4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INFO(message)<sp/>rootLogger::info(message);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SET_LOGGING_HANDLER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="d5/d77/logging_8h_1a9b7950453a79cd338475905367cb10c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_LOGGING_HANDLER(newHandler)<sp/>rootLogger::setHandler(newHandler);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LOGGING_H</highlight></codeline>
    </programlisting>
    <location file="src/logging.h"/>
  </compounddef>
</doxygen>
