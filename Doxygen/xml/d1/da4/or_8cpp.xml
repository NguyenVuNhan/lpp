<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d1/da4/or_8cpp" kind="file" language="C++">
    <compoundname>or.cpp</compoundname>
    <includes refid="df/d34/or_8h" local="yes">or.h</includes>
    <includes refid="d8/dff/negate_8h" local="yes">negate.h</includes>
    <includes refid="d5/d25/and_8h" local="yes">and.h</includes>
    <includes refid="d6/df8/nand_8h" local="yes">nand.h</includes>
    <incdepgraph>
      <node id="479">
        <label>list</label>
      </node>
      <node id="482">
        <label>iomanip</label>
      </node>
      <node id="470">
        <label>src/notation/or.cpp</label>
        <link refid="d1/da4/or_8cpp"/>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
      </node>
      <node id="471">
        <label>or.h</label>
        <link refid="df/d34/or_8h"/>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
      </node>
      <node id="484">
        <label>multior.h</label>
        <link refid="da/d4e/multior_8h"/>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="485">
        <label>negate.h</label>
        <link refid="d8/dff/negate_8h"/>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>string</label>
      </node>
      <node id="474">
        <label>fstream</label>
      </node>
      <node id="480">
        <label>../../utils.h</label>
        <link refid="d5/d60/utils_8h"/>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
      </node>
      <node id="478">
        <label>../proposition/tableaux/stnode.h</label>
        <link refid="d6/d13/stnode_8h"/>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
      </node>
      <node id="486">
        <label>and.h</label>
        <link refid="d5/d25/and_8h"/>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="476">
        <label>array</label>
      </node>
      <node id="473">
        <label>iostream</label>
      </node>
      <node id="477">
        <label>../proposition/tableaux/enum.h</label>
        <link refid="d5/d32/proposition_2tableaux_2enum_8h"/>
      </node>
      <node id="487">
        <label>nand.h</label>
        <link refid="d6/df8/nand_8h"/>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="481">
        <label>algorithm</label>
      </node>
      <node id="472">
        <label>node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
      </node>
      <node id="483">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d34/or_8h" kindref="compound">or.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/dff/negate_8h" kindref="compound">negate.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d5/d25/and_8h" kindref="compound">and.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/df8/nand_8h" kindref="compound">nand.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="d8/d1b/class_or_1a3247e4bae89e48da60037469ba896128" refkind="member"><highlight class="normal"><ref refid="d8/d1b/class_or_1a3247e4bae89e48da60037469ba896128" kindref="member">Or::Or</ref>(shared_ptr&lt;Node&gt;<sp/>left,<sp/>shared_ptr&lt;Node&gt;<sp/>right)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="dc/d8f/class_node" kindref="compound">Node</ref>(left,<sp/>right)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d8f/class_node_1a0178acf2d687a5535122e4cdb1e8e079" kindref="member">notation</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="d8/d1b/class_or_1aea3ecd177d77f4478464d2def9c5618b" refkind="member"><highlight class="normal"><ref refid="d8/d1b/class_or_1aea3ecd177d77f4478464d2def9c5618b" kindref="member">Or::~Or</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="d8/d1b/class_or_1a9ede00ef8120ad4aee9f69049628ead9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d1b/class_or_1a9ede00ef8120ad4aee9f69049628ead9" kindref="member">Or::getValue</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>valList)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;getValue(valList)<sp/>||<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;getValue(valList);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="d8/d1b/class_or_1a1fc17643b67383ec7be340d278c8e60a" refkind="member"><highlight class="normal">shared_ptr&lt;Node&gt;<sp/><ref refid="d8/d1b/class_or_1a1fc17643b67383ec7be340d278c8e60a" kindref="member">Or::nandify</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNegation)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;Node&gt;<sp/>notLeft<sp/>=<sp/>make_shared&lt;Negate&gt;(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;Node&gt;<sp/>notRight<sp/>=<sp/>make_shared&lt;Negate&gt;(<ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;Node&gt;<sp/>ret<sp/>=<sp/>make_shared&lt;NAnd&gt;(notLeft-&gt;nandify(),<sp/>notRight-&gt;nandify());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="d8/d1b/class_or_1a0fd1f6086987f7b1fe9fab9a196c1839" refkind="member"><highlight class="normal"><ref refid="d5/d32/proposition_2tableaux_2enum_8h_1a70c93904c6a27d228050f922eb4fc3b8" kindref="member">RULES</ref><sp/><ref refid="d8/d1b/class_or_1a0fd1f6086987f7b1fe9fab9a196c1839" kindref="member">Or::getSTRuleName</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNegation)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isNegation)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/d32/proposition_2tableaux_2enum_8h_1a70c93904c6a27d228050f922eb4fc3b8afbaa3fc38bba7fcfaffd6e5d346288c9" kindref="member">BETA</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/d32/proposition_2tableaux_2enum_8h_1a70c93904c6a27d228050f922eb4fc3b8a47e073572a47a01522b766b027f1a16c" kindref="member">ALPHA</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="d8/d1b/class_or_1aeedae2f08d30d4e9dcae30916aa27c59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d1b/class_or_1aeedae2f08d30d4e9dcae30916aa27c59" kindref="member">Or::getSTNodeChild</ref>(shared_ptr&lt;STNode&gt;<sp/>root,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNegation)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>root-&gt;left<sp/>=<sp/>make_shared&lt;STNode&gt;(root-&gt;nodes,<sp/>root-&gt;listVar);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isNegation)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root-&gt;right<sp/>=<sp/>make_shared&lt;STNode&gt;(root-&gt;nodes,<sp/>root-&gt;listVar);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d60/utils_8h_1a8970db197c1beaf1ef3a2113d9bbdc3d" kindref="member">listReplaceAt</ref>(root-&gt;left-&gt;nodes,<sp/><ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>,<sp/>pos);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d60/utils_8h_1a8970db197c1beaf1ef3a2113d9bbdc3d" kindref="member">listReplaceAt</ref>(root-&gt;right-&gt;nodes,<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>,<sp/>pos);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;shared_ptr&lt;Node&gt;<sp/>&gt;<sp/>tmp_list;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_list.push_back(make_shared&lt;Negate&gt;(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_list.push_back(make_shared&lt;Negate&gt;(<ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d60/utils_8h_1a8970db197c1beaf1ef3a2113d9bbdc3d" kindref="member">listReplaceAt</ref>(root-&gt;left-&gt;nodes,<sp/>tmp_list,<sp/>pos);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="d8/d1b/class_or_1ad8a208aee185d567ede5c92f39796faa" refkind="member"><highlight class="normal">shared_ptr&lt;Node&gt;<sp/><ref refid="d8/d1b/class_or_1ad8a208aee185d567ede5c92f39796faa" kindref="member">Or::cnfFilter</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNegation)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isNegation)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/d8f/class_node_1afd9769d942984448aa8e541ada73b289" kindref="member">andSimplify</ref>(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;cnfFilter(</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;cnfFilter(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/d8f/class_node_1a92e887aab236cfc28d81bdf0fdb9379f" kindref="member">orSimplify</ref>(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;cnfFilter(),<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;cnfFilter());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="d8/d1b/class_or_1ae49bee04503f31d32750ecf8671e5552" refkind="member"><highlight class="normal">shared_ptr&lt;Node&gt;<sp/><ref refid="d8/d1b/class_or_1ae49bee04503f31d32750ecf8671e5552" kindref="member">Or::cnfDistribution</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;Node&gt;<sp/>l<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;Node&gt;<sp/>r<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;Node&gt;<sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;notation<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>make_shared&lt;Or&gt;(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;left,<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>make_shared&lt;Or&gt;(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;right,<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>make_shared&lt;And&gt;(l,<sp/>r);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;notation<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&amp;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>make_shared&lt;Or&gt;(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>,<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;left);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>make_shared&lt;Or&gt;(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>,<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;right);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>make_shared&lt;And&gt;(l,<sp/>r);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;Node&gt;<sp/>multiOr<sp/>=<sp/><ref refid="d8/d1b/class_or_1a1d32e059bdc6ff80fb4798c90553e2cb" kindref="member">getMultiOr</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(multiOr<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>multiOr;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref><sp/>=<sp/><ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;cnfDistribution();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref><sp/>=<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;cnfDistribution();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>shared_from_this();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret-&gt;cnfDistribution();</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="d8/d1b/class_or_1a35728ed23db1ec805267d8d244629a62" refkind="member"><highlight class="normal">shared_ptr&lt;Node&gt;<sp/><ref refid="d8/d1b/class_or_1a35728ed23db1ec805267d8d244629a62" kindref="member">Or::copy</ref>()</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared&lt;Or&gt;(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;copy(),<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;copy());</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="d8/d1b/class_or_1a1d32e059bdc6ff80fb4798c90553e2cb" refkind="member"><highlight class="normal">shared_ptr&lt;Node&gt;<sp/><ref refid="d8/d1b/class_or_1a1d32e059bdc6ff80fb4798c90553e2cb" kindref="member">Or::getMultiOr</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>notationList<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;!@=&gt;%&amp;&amp;||&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;shared_ptr&lt;Node&gt;<sp/>&gt;<sp/>listNodes;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(notationList.find(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;notation)<sp/>==<sp/>string::npos)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(notationList.find(<ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;notation)<sp/>==<sp/>string::npos)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listNodes.push_back(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listNodes.push_back(<ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared&lt;MultiOr&gt;(listNodes);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;notation<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;||&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;variables.push_back(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(notationList.find(<ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;notation)<sp/>==<sp/>string::npos)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(notationList.find(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;notation)<sp/>==<sp/>string::npos)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listNodes.push_back(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listNodes.push_back(<ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared&lt;MultiOr&gt;(listNodes);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;notation<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;||&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;variables.push_back(<ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;notation<sp/>==</highlight><highlight class="stringliteral">&quot;||&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;notation<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;||&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listNodes.insert(listNodes.end(),<sp/><ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;variables.begin(),<sp/><ref refid="dc/d8f/class_node_1a978574f2c08939cfef1041041eb9c5be" kindref="member">left</ref>-&gt;variables.end());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listNodes.insert(listNodes.end(),<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;variables.begin(),<sp/><ref refid="dc/d8f/class_node_1af68a851484bce64ed9463a50025df424" kindref="member">right</ref>-&gt;variables.end());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_shared&lt;MultiOr&gt;(listNodes);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/notation/or.cpp"/>
  </compounddef>
</doxygen>
