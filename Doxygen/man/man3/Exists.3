.TH "Exists" 3 "Sun Nov 24 2019" "Version 1.0" "Logic" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Exists
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <exists\&.h>\fP
.PP
Inherits \fBNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBExists\fP (shared_ptr< \fBNode\fP > l=nullptr, shared_ptr< \fBNode\fP > r=nullptr)"
.br
.ti -1c
.RI "\fB~Exists\fP () override"
.br
.ti -1c
.RI "string \fBtoString\fP () override"
.br
.RI "get proposition infix formular "
.ti -1c
.RI "\fBRULES\fP \fBgetSTRuleName\fP (bool isNegation) override"
.br
.RI "get semantic taubleux rule name "
.ti -1c
.RI "void \fBgetSTNodeChild\fP (shared_ptr< \fBSTNode\fP > root, long pos, bool isNegation) override"
.br
.RI "get semantic taubleaux node child (\fBSTNode\&.left\fP and \fBSTNode\&.right\fP) "
.ti -1c
.RI "shared_ptr< \fBNode\fP > \fBcopy\fP () override"
.br
.RI "deep copy node "
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Exists::Exists (shared_ptr< \fBNode\fP > l = \fCnullptr\fP, shared_ptr< \fBNode\fP > r = \fCnullptr\fP)"

.SS "Exists::~Exists ()\fC [override]\fP"

.SH "Member Function Documentation"
.PP 
.SS "shared_ptr< \fBNode\fP > Exists::copy ()\fC [override]\fP, \fC [virtual]\fP"

.PP
deep copy node 
.PP
\fBReturns:\fP
.RS 4
a deep copy of node 
.RE
.PP

.PP
Reimplemented from \fBNode\fP\&.
.SS "void Exists::getSTNodeChild (shared_ptr< \fBSTNode\fP > root, long pos, bool isNegation)\fC [override]\fP, \fC [virtual]\fP"

.PP
get semantic taubleaux node child (\fBSTNode\&.left\fP and \fBSTNode\&.right\fP) 
.PP
\fBParameters:\fP
.RS 4
\fIroot\fP - \fBSTNode\fP 
.br
\fIroot\fP - \fBSTNode\fP contains child 
.br
\fIpos\fP - position of child \fBNode\fP of \fBSTNode::nodes\fP list 
.br
\fIisNegation\fP - check if this node parent is Negation 
.RE
.PP

.PP
Reimplemented from \fBNode\fP\&.
.SS "\fBRULES\fP Exists::getSTRuleName (bool isNegation)\fC [override]\fP, \fC [virtual]\fP"

.PP
get semantic taubleux rule name 
.PP
\fBParameters:\fP
.RS 4
\fIisNegation\fP - check if this node parent is Negation 
.RE
.PP
\fBReturns:\fP
.RS 4
RULES - semantic taubleaux rule name 
.RE
.PP

.PP
Reimplemented from \fBNode\fP\&.
.SS "string Exists::toString ()\fC [override]\fP, \fC [virtual]\fP"

.PP
get proposition infix formular 
.PP
\fBReturns:\fP
.RS 4
string of infix proposition 
.RE
.PP

.PP
Reimplemented from \fBNode\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Logic from the source code\&.
